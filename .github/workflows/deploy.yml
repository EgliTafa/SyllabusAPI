name: Build, Push, and Apply Migrations to Azure SQL

on:
  push:
    branches:
      - development
      - main
    tags:
      - 'v*.*.*'  # Semantic versioning tags like v1.0.0

permissions:
  contents: read  # id-token is NOT needed here since we use Service Principal

env:
  ACR_LOGIN_SERVER: syllabusregistry.azurecr.io
  ACR_REPOSITORY: syllabusapi

jobs:
  build-push-migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures tags are fetched too

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure login (Service Principal)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # ✅ Use full JSON from `az ad sp create-for-rbac --sdk-auth`

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Extract tag version
        id: get_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: SyllabusAPI/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ steps.get_tag.outputs.version }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:latest

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore SyllabusAPI.sln

      - name: Install dotnet-ef global tool
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Install MSSQL tools
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> $GITHUB_PATH

      - name: Wait for SQL database to be ready
        run: |
          echo "Checking SQL database availability..."
          for i in {1..10}; do
            if sqlcmd -S ${{ secrets.SQL_SERVER }} -U ${{ secrets.SQL_USER }} -P ${{ secrets.SQL_PASSWORD }} -d master -Q "SELECT 1" ; then
              echo "✅ SQL database is ready!"
              break
            else
              echo "❌ SQL database not ready yet. Retrying in 15 seconds..."
              sleep 15
            fi
            if [[ $i -eq 10 ]]; then
              echo "❌ Database did not become available after 10 attempts. Failing the job."
              exit 1
            fi
          done

      - name: Apply EF Core migrations
        run: dotnet ef database update --project Syllabus.Infrastructure --startup-project SyllabusAPI --context SyllabusDbContext
        env:
          ConnectionStrings__DefaultConnection: "Server=${{ secrets.SQL_SERVER }};Database=${{ secrets.SQL_DATABASE }};User Id=${{ secrets.SQL_USER }};Password=${{ secrets.SQL_PASSWORD }};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"

      - name: Confirm migration success
        run: echo "✅ Database migration applied successfully!"
